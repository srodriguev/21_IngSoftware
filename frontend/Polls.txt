import React, { useState, useEffect, useRef } from "react";

const API = process.env.REACT_APP_API;

export function PollDetail() {
    
    const [pollID, setPollID] = useState("");
    const [name, setName] = useState("");
    const [answers, setAnswers] = useState("");
    const [notes, setNotes] = useState("");

    const [editing, setEditing] = useState(false);
    const [id, setId] = useState("");

    const nameInput = useRef(null);

    let [myAnswers, setAnswer] = useState([]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (!editing) {
            const res = await fetch(`${API}/PollDetail/`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    pollID,
                    name,
                    answers,
                    notes,
                }),
            });
            await res.json();
        } else {
            const res = await fetch(`${API}/PollDetail/${id}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    pollID,
                    name,
                    answers,
                    notes,
                }),
            });
            const data = await res.json();
            console.log(data);
            setEditing(false);
            setId("");
        }
        await getAnswers();

        setPollID("");
        setName("");
        setAnswers("");
        setNotes("");
        nameInput.current.focus();
    };

    const getAnswers = async () => {
        const res = await fetch(`${API}/PollDetail`);
        const data = await res.json();
        setAnswer(data);
    };

    const deleteAnswer = async (id) => {
        const userResponse = window.confirm("Are you sure you want to delete it?");
        if (userResponse) {
            const res = await fetch(`${API}/PollDetail/${id}`, {
                method: "DELETE",
            });
            const data = await res.json();
            console.log(data);
            await getAnswers();
        }
    };

    const editAnswer = async (id) => {
        const res = await fetch(`${API}/PollDetail/${id}`);
        const data = await res.json();

        setEditing(true);
        setId(id);

        // Reset
        setPollID(data.pollID);
        setName(data.name);
        setAnswers(data.answers);
        setNotes(data.notes);
        nameInput.current.focus();
    };



    useEffect(() => {
        getAnswers();
    }, []);

    return (
        <div className="row">
            <div className="col-md-5">
                <form onSubmit={handleSubmit} className="card card-body">
                <h8>Pon tu nombre para la respuesta</h8>
                    <div className="form-group">
                        <input
                            type="text"
                            onChange={(e) => setName(e.target.value)}
                            value={name}
                            className="form-control"
                            placeholder="Contestant's Name"
                            ref={nameInput}
                            autoFocus />
                    </div>
                    <h8>Pon tus respuestas</h8>
                    <div className="form-group">
                        <input
                            type="textArea"
                            rows= {5}
                            style= {{ minHeight:150, resize: "none" }}
                            onChange={(e) => setAnswers(e.target.value)}
                            value={answers}
                            className="form-control"
                            placeholder="Intended Public" />
                    </div>
                    <h8>Pon aqu√≠ notas</h8>
                    <div className="form-group">
                        <input
                            type="textArea" 
                            rows= {5}
                            style= {{ minHeight:150, resize: "none" }}
                            onChange={(e) => setNotes(e.target.value)}
                            value={notes}
                            className="form-control"
                            placeholder="Questions" />
                    </div>
                    <button className="btn btn-primary btn-block">
                        {editing ? "Update" : "Create"}
                    </button>
                </form>
            </div>
            
            <div className="col-md-6">
            <h3>Encuestas abiertas: </h3>
                <table className="table table-striped">
                    <thead>
                        <tr>
                            <th>Encuesta</th>
                            <th>Nombre</th>
                            <th>Respuestas</th>
                            <th>Notas</th>
                            <th>Operaciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        {myAnswers.map((myAnswer) => (
                            <tr key={myAnswer._id}>
                                <td>{myAnswer.pollID}</td>
                                <td>{myAnswer.name}</td>
                                <td>{myAnswer.targetPublic}</td>
                                <td>{myAnswer.questions}</td>
                                <td>{myAnswer.finishDate}</td>
                                <td>
                                    
                                    <button
                                        className="btn btn-secondary btn-sm btn-block"
                                        onClick={(e) => editAnswer(myAnswer._id)}
                                    >
                                        Edit
                                    </button>
                                    <button
                                        className="btn btn-danger btn-sm btn-block"
                                        onClick={(e) => deleteAnswer(myAnswer._id)}
                                    >
                                        Delete
                                    </button>  
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        </div>
    );
}